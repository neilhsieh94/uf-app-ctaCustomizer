{
  "account_code_blocks": [
    {
      "code": "_SAMPLE_MANIFEST",
      "name": "sample_manifest",
      "content": "<script> console.log('**SAMPLE MANIFEST OUTPUT TEST**'); console.log('Text Spacing: {{text_spacing_val}}'); console.log('Textbox Example: {{textbox_example}}'); console.log('Number Example: {{number_example}}'); console.log('Toggle Example: {{toggle_example}}'); console.log('Debug Example: {{debug_mode}}'); </script><script>\"use strict\";function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}function _unsupportedIterableToArray(t,e){if(t){if(\"string\"==typeof t)return _arrayLikeToArray(t,e);var o=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===o&&t.constructor&&(o=t.constructor.name),\"Map\"===o||\"Set\"===o?Array.from(t):\"Arguments\"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?_arrayLikeToArray(t,e):void 0}}function _iterableToArray(t){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray(t)}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var o=0,l=new Array(e);o<e;o++)l[o]=t[o];return l}var letterSpacingToggle=!!\"{{ text_spacing_toggle }}\".length&&JSON.parse(\"{{ text_spacing_toggle }}\"),letterSpacingVal=\"{{ text_spacing_val }}\",buttonCornerRoundToggle=!!\"{{ button_corner_toggle }}\".length&&JSON.parse(\"{{ button_corner_toggle }}\"),buttonCornerRound=\"{{ button_corner_val }}\",fontSizeToggle=!!\"{{ font_size_toggle }}\".length&&JSON.parse(\"{{ font_size_toggle }}\"),fontSize=\"{{ font_size_val }}\",buttonPaddingToggle=!!\"{{ button_padding_toggle }}\".length&&JSON.parse(\"{{ button_padding_toggle }}\"),buttonPadding=\"{{ button_padding_val }}\",omitLetterSpacingFormCtaFlag=!!\"{{ text_spacing_omit_form_toggle }}\".length&&JSON.parse(\"{{ text_spacing_omit_form_toggle }}\"),omitFontSizingFormCtaFlag=!!\"{{ font_size_omit_form_toggle }}\".length&&JSON.parse(\"{{ font_size_omit_form_toggle }}\"),omitButtonCornerFormCtaFlag=!!\"{{ button_corner_omit_form_toggle }}\".length&&JSON.parse(\"{{ button_corner_omit_form_toggle }}\"),omitButtonPaddingFormCtaFlag=!!\"{{ button_padding_omit_form_toggle }}\".length&&JSON.parse(\"{{ button_padding_omit_form_toggle }}\"),omitMultiLevelFormCtaFlag=!!\"{{ multi_level_text_omit_form_toggle }}\".length&&JSON.parse(\"{{ multi_level_text_omit_form_toggle }}\"),multiLevelSymbol=\"{{ multi_level_symbol_val }}\",multiLevelSymbolToggle=!!\"{{ multi_level_text_toggle }}\".length&&JSON.parse(\"{{ multi_level_text_toggle }}\"),toArray=function(t){if(t.length){var e=t.includes(\"'\")?t.replace(/'/g,'\"'):t;return JSON.parse(e)}},specificCtaFlag=!!\"{{ specifc_cta_toggle }}\".length&&JSON.parse(\"{{ specifc_cta_toggle }}\"),labelPlaceholderToggle=!!\"{{ form_cta_label_toggle }}\".length&&JSON.parse(\"{{ form_cta_label_toggle }}\"),specificCtaArr=!!\"{{ specific_cta_array }}\".length&&toArray(\"[\".concat(\"{{ specific_cta_array }}\",\"]\")),labelPlaceholder=!!\"{{ form_cta_label_text }}\".length&&toArray(\"[\".concat(\"{{ form_cta_label_text }}\",\"]\")),fontCust=!!\"{{ multi_level_text_val }}\".length&&toArray(\"[\".concat(\"{{ multi_level_text_val }}\",\"]\")),debugVariable=!!\"{{ debug_mode }}\".length&&toArray(\"{{ debug_mode }}\");if(debugVariable){var dividerStyles=[\"background-color: rgba(0, 47, 217, 0.7)\",\"color: white\",\"display: block\",\"line-height: 1.5\"].join(\";\"),textStyles=[\"display: block\",\"line-height: 1.5\"].join(\";\");console.log(\"%c********************************************\",dividerStyles),console.log(\"%c CTA CUSTOMIZER MODE ENABLED. See below for key value pairs reflecting what is selected in the app.\",textStyles),console.log(\"%c Specific CTA toggle: \".concat(specificCtaFlag),textStyles),console.log(\"%c Specific CTA array: \".concat(specificCtaArr),textStyles),console.log(\"%c Letter spacing toggle: \".concat(letterSpacingToggle),textStyles),console.log(\"%c Omit Letter spacing for Form CTA Toggle: \".concat(omitLetterSpacingFormCtaFlag),textStyles),console.log(\"%c Letter spacing variable: \".concat(letterSpacingVal),textStyles),console.log(\"%c Button corner round toggle: \".concat(buttonCornerRoundToggle),textStyles),console.log(\"%c Omit Button Corner for Form CTA Toggle: \".concat(omitButtonCornerFormCtaFlag),textStyles),console.log(\"%c Button Corner round variable: \".concat(buttonCornerRound),textStyles),console.log(\"%c Font size toggle: \".concat(fontSizeToggle),textStyles),console.log(\"%c Omit Font size for Form CTA Toggle: \".concat(omitFontSizingFormCtaFlag,\" \"),textStyles),console.log(\"%c Font size variable: \".concat(fontSize),textStyles),console.log(\"%c Button padding toggle: \".concat(buttonPaddingToggle),textStyles),console.log(\"%c Omit Button padding for Form CTA Toggle: \".concat(omitButtonPaddingFormCtaFlag),textStyles),console.log(\"%c Button padding variable: \".concat(buttonPadding),textStyles),console.log(\"%c Multi level text toggle: \".concat(multiLevelSymbolToggle),textStyles),console.log(\"%c Omit Multi level text for Form CTA Toggle: \".concat(omitMultiLevelFormCtaFlag),textStyles),console.log(\"%c Multi level variable: \".concat(multiLevelSymbol),textStyles),console.log(\"%c Multi level font customizations variable: \".concat(fontCust),textStyles),console.log(\"%c Button padding variable: \".concat(buttonPadding),textStyles),console.log(\"%c Form CTA label toggle: \".concat(labelPlaceholderToggle),textStyles),console.log(\"%c Form CTA label placeholder text: \".concat(labelPlaceholder),textStyles),console.log(\"%c********************************************\",dividerStyles)}if(document.body.dataset.domainTheme){var ctaCustomizer_tv2=function(){if(document.querySelector(\".uf-cta-tile\")){var t=[],e=function(t,e){_toConsumableArray(t.querySelectorAll(\".uf-cta-label\")).forEach(function(t){var o=t.textContent.trim();if(e.includes(o)){var l=e.indexOf(o),n=labelPlaceholder[l][1],a=t.cloneNode();a.textContent=n,a.classList.add(\"uf-cta-label-clone\"),t.insertAdjacentElement(\"afterend\",a),t.style.display=\"none\"}})},o=function(t){letterSpacingToggle&&letterSpacingVal&&[].concat(_toConsumableArray(t.querySelectorAll(\"p\")),_toConsumableArray(t.querySelectorAll(\"a\")),_toConsumableArray(t.querySelectorAll(\"span\")),_toConsumableArray(t.querySelectorAll(\"input\")),_toConsumableArray(t.querySelectorAll(\"label\")),_toConsumableArray(t.querySelectorAll(\"button\"))).forEach(function(t){t.style.letterSpacing=\"\".concat(letterSpacingVal,\"px\")})},l=function(t){var e=t.querySelector(\".uf-link-cta-tile-link\")||t.querySelector(\".uf-cta-submit-button\");buttonCornerRoundToggle&&buttonCornerRound&&(e.style.borderRadius=\"\".concat(buttonCornerRound))},n=function(t){var e=t.querySelector(\".uf-link-cta-tile-link\")||t.querySelector(\".uf-cta-submit-button\");fontSizeToggle&&fontSize&&(e.style.fontSize=\"\".concat(fontSize,\"px\"))},a=function(t){var e=t.querySelector(\".uf-link-cta-tile-link\")||t.querySelector(\".uf-cta-submit-button\");buttonPadding&&buttonPaddingToggle&&(e.style.padding=\"\".concat(buttonPadding))},r=function(t,e){var o=e.split(multiLevelSymbol),l=t.querySelector(\"p\");l.innerText=\"\",o.forEach(function(t,e){var o=document.createElement(\"span\");o.innerText=t,o.style.display=\"block\";var n=\"10px\";fontCust[e]&&(fontCust[e][0]&&(o.style.fontSize=\"\".concat(fontCust[e][0])),fontCust[e][1]&&(o.style.fontWeight=\"\".concat(fontCust[e][1])),fontCust[e][2]&&(n=\"\".concat(fontCust[e][2]))),o.style.marginBottom=n,l.appendChild(o)})};if(document.querySelector(\".uf-cta-tile\")){specificCtaFlag&&specificCtaArr.length?specificCtaArr.forEach(function(e){document.querySelector(\".uf-cta-tile[data-id='\".concat(e,\"']\"))&&t.push(document.querySelector(\".uf-cta-tile[data-id='\".concat(e,\"']\")))}):t=_toConsumableArray(document.querySelectorAll(\".uf-cta-tile\")),t.forEach(function(t){if(omitLetterSpacingFormCtaFlag&&!t.classList.contains(\"uf-link-cta-tile\")||o(t),omitButtonCornerFormCtaFlag&&!t.classList.contains(\"uf-link-cta-tile\")||l(t),omitFontSizingFormCtaFlag&&!t.classList.contains(\"uf-link-cta-tile\")||n(t),omitButtonPaddingFormCtaFlag&&!t.classList.contains(\"uf-link-cta-tile\")||a(t),!omitMultiLevelFormCtaFlag||t.classList.contains(\"uf-link-cta-tile\")){var e=t.querySelector(\"p\").innerText||t.querySelector(\".uf-link-cta-tile-text\").innerText;multiLevelSymbolToggle&&multiLevelSymbol.length&&e.includes(multiLevelSymbol)&&r(t,e)}});var c=_toConsumableArray(document.querySelectorAll(\".uf-cta-tile.uf-form-cta-tile\"));if(labelPlaceholderToggle&&labelPlaceholder.length){var i=labelPlaceholder.map(function(t){return t[0]});c.forEach(function(t){t.querySelector(\".uf-cta-label\")&&e(t,i)})}!labelPlaceholderToggle&&omitLetterSpacingFormCtaFlag&&omitFontSizingFormCtaFlag&&omitButtonCornerFormCtaFlag&&omitButtonPaddingFormCtaFlag&&omitMultiLevelFormCtaFlag||c.forEach(function(t){t.addEventListener(\"click\",function(){t.querySelector(\".uf-cta-label\")&&setTimeout(function(){if(labelPlaceholderToggle&&labelPlaceholder.length){var c=labelPlaceholder.map(function(t){return t[0]});e(t,c)}if(omitLetterSpacingFormCtaFlag||o(t),omitButtonCornerFormCtaFlag||l(t),omitFontSizingFormCtaFlag||n(t),omitButtonPaddingFormCtaFlag||a(t),!omitMultiLevelFormCtaFlag){var i=t.querySelector(\".uf-cta-tagline\").innerText;multiLevelSymbolToggle&&multiLevelSymbol.length&&i.includes(multiLevelSymbol)&&r(t,i)}},250)})})}}};ctaCustomizer_tv2()}else{var ctaCustomizer_tv1=function(){if(document.querySelector(\".cta\")){var t=[],e=function(t,e){_toConsumableArray(t.querySelectorAll(\".cta-field-name\")).forEach(function(t){var o=t.textContent.trim();if(e.includes(o)){var l=e.indexOf(o),n=labelPlaceholder[l][1],a=t.cloneNode();a.textContent=n,a.classList.remove(\"cta-field-name\"),a.classList.add(\"cta-field-name-clone\"),t.insertAdjacentElement(\"afterend\",a),t.style.display=\"none\"}})},o=function(t){console.log(\"Toggle and val tv1\",letterSpacingToggle,letterSpacingVal),letterSpacingToggle&&letterSpacingVal&&(console.log(\"span in letterspacing\",Boolean(t.querySelectorAll(\"span\"))),[].concat(_toConsumableArray(t.querySelectorAll(\"p\")),_toConsumableArray(t.querySelectorAll(\"a\")),_toConsumableArray(t.querySelectorAll(\"span\")),_toConsumableArray(t.querySelectorAll(\"input\"))).forEach(function(t){t.style.letterSpacing=\"\".concat(letterSpacingVal,\"px\")}))},l=function(t){var e=t.querySelector(\".cta-button\");buttonCornerRoundToggle&&buttonCornerRound&&(e.style.borderRadius=\"\".concat(buttonCornerRound))},n=function(t){var e=t.querySelector(\".cta-button\");fontSizeToggle&&fontSize&&(e.style.fontSize=\"\".concat(fontSize,\"px\"))},a=function(t){var e=t.querySelector(\".cta-button\");buttonPadding&&buttonPaddingToggle&&(e.style.padding=\"\".concat(buttonPadding))},r=function(t,e){var o=e.split(multiLevelSymbol),l=t.querySelector(\"p\");l.innerText=\"\",o.forEach(function(t,e){var o=document.createElement(\"span\");o.innerText=t,o.style.display=\"block\";var n=\"10px\";fontCust[e]&&(fontCust[e][0]&&(o.style.fontSize=\"\".concat(fontCust[e][0])),fontCust[e][1]&&(o.style.fontWeight=\"\".concat(fontCust[e][1])),fontCust[e][2]&&(n=\"\".concat(fontCust[e][2]))),o.style.marginBottom=n,l.appendChild(o)})};if(document.querySelector(\".cta\")){specificCtaFlag&&specificCtaArr.length?specificCtaArr.forEach(function(e){document.querySelector(\".cta[data-cta-id='\".concat(e,\"']\"))&&t.push(document.querySelector(\".cta[data-cta-id='\".concat(e,\"']\")))}):t=_toConsumableArray(document.querySelectorAll(\".tile.cta\")),t.forEach(function(t){if(omitLetterSpacingFormCtaFlag&&!t.classList.contains(\"cta-website\")||o(t),omitButtonCornerFormCtaFlag&&!t.classList.contains(\"cta-website\")||l(t),omitFontSizingFormCtaFlag&&!t.classList.contains(\"cta-website\")||n(t),omitButtonPaddingFormCtaFlag&&!t.classList.contains(\"cta-website\")||a(t),!omitMultiLevelFormCtaFlag||t.classList.contains(\"cta-website\")){var e=t.querySelector(\"p\").innerText||t.querySelector(\".run-away p\").innerText;multiLevelSymbolToggle&&multiLevelSymbol.length&&e.includes(multiLevelSymbol)&&r(t,e)}});var c=_toConsumableArray(document.querySelectorAll(\".tile.cta-form\"));if(labelPlaceholderToggle&&labelPlaceholder.length){var i=labelPlaceholder.map(function(t){return t[0]});c.forEach(function(t){t.querySelector(\".cta-field-name\")&&e(t,i)})}console.log(\"before click function, letter toggle\",letterSpacingToggle),!labelPlaceholderToggle&&omitLetterSpacingFormCtaFlag&&omitFontSizingFormCtaFlag&&omitButtonCornerFormCtaFlag&&omitButtonPaddingFormCtaFlag&&omitMultiLevelFormCtaFlag||c.forEach(function(t){console.log(\"for each, letter toggle\",letterSpacingToggle),t.addEventListener(\"click\",function(){console.log(\"clicked, letter toggle\",letterSpacingToggle),t.querySelector(\".cta-field-name\")&&setTimeout(function(){if(console.log(\"timeout, letter toggle\",letterSpacingToggle),labelPlaceholderToggle&&labelPlaceholder.length){var c=labelPlaceholder.map(function(t){return t[0]});e(t,c)}if(omitLetterSpacingFormCtaFlag||(console.log(\"letter spacing\"),o(t)),omitButtonCornerFormCtaFlag||l(t),omitFontSizingFormCtaFlag||n(t),omitButtonPaddingFormCtaFlag||a(t),!omitMultiLevelFormCtaFlag){var i=t.querySelector(\".run-away p\").innerText;multiLevelSymbolToggle&&multiLevelSymbol.length&&i.includes(multiLevelSymbol)&&r(t,i)}},250)})})}}};ctaCustomizer_tv1()}</script>",
      "placement_code": "BODY_BOTTOM",
      "description": "This is a sample manifest outputting fields to the console"
    }
  ],
  "config_fields": [
    {
      "code": "_SPECIFIC_CTA_TOGGLE",
      "name": "specifc_cta_toggle",
      "label": "[ Specific CTA ] Toggle to only target specific CTA(s)",
      "ordinal": 0,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, only the below entered IDs will be targeted. If disabled, ALL CTAs will be targeted with the CTA customizations"
    },
    {
      "code": "_SPECIFIC_CTA_ARRAY",
      "name": "specific_cta_array",
      "ordinal": 1,
      "label": "[ Specific CTA ] List of CTA IDs",
      "category": "integrations",
      "control_type": "textbox",
      "scopes": ["hub", "account"],
      "description": "Entered IDs will apply customizations to these specified CTAs",
      "control_props": {
        "placeholder": "Enter ID's separated by commas, ie: 123345, 1231241"
      }
    },

    {
      "code": "_TEXT_SPACING_TOGGLE",
      "name": "text_spacing_toggle",
      "label": "[ Letter Spacing ] Enable Letter Spacing",
      "ordinal": 2,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, the text of CTA tiles will have letter spacing based on values set below"
    },
    {
      "code": "_TEXT_SPACING_OMIT_FORM_TOGGLE",
      "name": "text_spacing_omit_form_toggle",
      "label": "[ Letter Spacing ] Omit letter spacing for all form CTAs",
      "ordinal": 3,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, letter spacing will be omitted for all form CTAs"
    },
    {
      "code": "_CTA_TEXT_SPACING",
      "name": "text_spacing_val",
      "label": "[ Letter Spacing ] Letter Spacing Value (px)",
      "ordinal": 4,
      "category": "integrations",
      "control_type": "number",
      "scopes": ["hub", "account"],
      "description": "Enter the Letter Spacing Value"
    },
    {
      "code": "_FONT_SIZE_TOGGLE",
      "name": "font_size_toggle",
      "label": "[ Button Font Size ] Enable custom button font size",
      "ordinal": 5,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, button font sizes will be applied based on values set below. NOTE: Check CTA on multiple window sizes (desktop, mobile, etc) to ensure font size selected will work on all breakpoints"
    },
    {
      "code": "_FONT_SIZE_OMIT_FORM_TOGGLE",
      "name": "font_size_omit_form_toggle",
      "label": "[ Button Font Size ] Omit custom font sizes for form CTAs",
      "ordinal": 6,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, custom button font size will be omitted for all form CTAs"
    },
    {
      "code": "_FONT_SIZE_VAL",
      "name": "font_size_val",
      "label": "[ Button Font Size ] Font size value (px)",
      "ordinal": 7,
      "category": "integrations",
      "control_type": "number",
      "scopes": ["hub", "account"],
      "description": "Set the button font size"
    },

    {
      "code": "_BUTTON_CORNER_TOGGLE",
      "name": "button_corner_toggle",
      "label": "[ Round Button ] Enable Rounded Button Corners",
      "ordinal": 8,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, the letters of CTA tiles will have letter spacing based on values set below"
    },
    {
      "code": "_BUTTON_CORNER_OMIT_FORM_TOGGLE",
      "name": "button_corner_omit_form_toggle",
      "label": "[ Round Button ] Omit rounded button corners for all form CTAs",
      "ordinal": 9,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, rounded button corners will be omitted for all form CTAs"
    },
    {
      "code": "_BUTTON_CORNER_VAL",
      "name": "button_corner_val",
      "label": "[ Round Button ] Button Rounded Corner Radius",
      "ordinal": 10,
      "category": "integrations",
      "control_type": "textbox",
      "scopes": ["hub", "account"],
      "description": "Set the corner radius of your content tiles using CSS border-radius format",
      "control_props": {
        "placeholder": "10px or 15px 20px"
      },
      "validation": {
        "maxlength": 25
      }
    },

    {
      "code": "_BUTTON_PADDING_TOGGLE",
      "name": "button_padding_toggle",
      "label": "[ Button Padding ] Enable custom padding",
      "ordinal": 11,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, button padding will be applied based on values set below"
    },
    {
      "code": "_BUTTON_PADDING_OMIT_FORM_TOGGLE",
      "name": "button_padding_omit_form_toggle",
      "label": "[ Button Padding ] Omit button padding for form CTAs",
      "ordinal": 12,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, button padding will omitted for all form CTAs"
    },
    {
      "code": "_BUTTON_PADDING_VAL",
      "name": "button_padding_val",
      "label": "[ Button Padding ] Button padding value",
      "ordinal": 13,
      "category": "integrations",
      "control_type": "textbox",
      "scopes": ["hub", "account"],
      "description": "Set the button padding",
      "control_props": {
        "placeholder": "10px or 15px 20px"
      },
      "validation": {
        "maxlength": 100
      }
    },
    {
      "code": "_MULTI_LEVEL_TEXT_TOGGLE",
      "name": "multi_level_text_toggle",
      "label": "[ Multi Level ] Enable CTA Multi Level Text",
      "ordinal": 14,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, function will check the CTA text for the symbol provided below and separate into its respective sections."
    },
    {
      "code": "_MULTI_LEVEL_TEXT_OMIT_FORM_TOGGLE",
      "name": "multi_level_text_omit_form_toggle",
      "label": "[ Multi Level ] Omit multi level text for form CTAs",
      "ordinal": 15,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, multi level text will be omitted for all form CTAs"
    },
    {
      "code": "_MULTI_LEVEL_TEXT_SYMBOL",
      "name": "multi_level_symbol_val",
      "label": "[ Multi Level ] Multi level text symbol",
      "ordinal": 16,
      "category": "integrations",
      "control_type": "textbox",
      "scopes": ["hub", "account"],
      "description": "Set the multi level symbol to check for.",
      "control_props": {
        "placeholder": "Enter symbol ie. % or %*"
      },
      "validation": {
        "maxlength": 10
      }
    },
    {
      "code": "_MULTI_LEVEL_TEXT_VAL",
      "name": "multi_level_text_val",
      "label": "[ Multi Level ] Multi level text customizations",
      "ordinal": 17,
      "category": "integrations",
      "control_type": "textbox",
      "scopes": ["hub", "account"],
      "description": "Set the multi level font customization parameters (optional). See app description for more detail",
      "control_props": {
        "placeholder": "ie. ['18px', '500', '10px'],['70%', '',  '5px']"
      }
    },
    {
      "code": "_FORM_CTA_LABEL_TOGGLE",
      "name": "form_cta_label_toggle",
      "label": "[ Form CTA Labels ] Enable form CTA label replacement",
      "ordinal": 18,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub", "account"],
      "description": "If enabled, the function will replace label placeholder text with those entered below."
    },
    {
      "code": "_FORM_CTA_LABEL_TEXT",
      "name": "form_cta_label_text",
      "label": "[ Form CTA Labels ] Form CTA label replacement values",
      "ordinal": 19,
      "category": "integrations",
      "control_type": "textbox",
      "scopes": ["hub", "account"],
      "description": "Enter your custom Form CTA label text(s).",
      "control_props": {
        "placeholder": "Enter array of replacements ['Old placeholder', 'New placeholder'],[...]"
      }
    },
    {
      "code": "_DEBUG_MODE",
      "name": "debug_mode",
      "label": "Debug Mode for Developers",
      "ordinal": 20,
      "category": "integrations",
      "control_type": "toggle",
      "scopes": ["hub"],
      "description": "For developer debugging purposes, when enabled check the console logs for detailed info on the operation of this app."
    }
  ]
}
